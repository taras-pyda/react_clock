{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","oldName","name","newName","props","isClockVisible","clearInterval","React","Component","App","clockName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,KAEHG,aAAY,WAEVE,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAfP,gCAkBE,SAAmBC,GACjB,IAAMC,EAAUD,EAAUE,KACpBC,EAAUT,KAAKU,MAAMF,KAEvBD,IAAYE,GAEdN,QAAQC,IAAR,qCAA0CG,EAA1C,eAAwDE,MAxB9D,kCA4BE,WACOT,KAAKU,MAAMC,gBACdC,cAAcZ,KAAKD,WA9BzB,oBAkCE,WACE,IAAQY,EAAmBX,KAAKU,MAAxBC,eACAd,EAASG,KAAKJ,MAAdC,KAER,OAAIc,EAEA,+BAAOd,EAAKQ,uBAIT,SA5CX,GAA2BQ,IAAMC,WCApBC,EAAb,4MACEnB,MAAQ,CACNe,gBAAgB,EAChBK,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,WAH/B,4CAME,WAAU,IAAD,OACCR,EAAmBX,KAAKJ,MAAxBe,eAER,OACE,sBAAKS,UAAU,MAAf,UACE,6CACA,8CAEG,IACD,cAAC,EAAD,CAAOT,eAAgBA,EAAgBH,KAAMR,KAAKJ,MAAMoB,eAE1D,wBACEK,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAES,gBAAgB,KAHpC,wBASA,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAES,gBAAgB,KAHpC,wBASA,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKpB,SAAS,CAAEc,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,aAH/C,oCAnCR,GAAyBN,IAAMC,WCR/BS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b6d4ecc0.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  isClockVisible: boolean;\n  name: number;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId!: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n\n    setInterval(() => {\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const oldName = prevProps.name;\n    const newName = this.props.name;\n\n    if (oldName !== newName) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${newName}`)\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.props.isClockVisible) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { isClockVisible } = this.props;\n    const { date } = this.state;\n\n    if (isClockVisible) {\n      return (\n        <span>{date.toLocaleTimeString()}</span>\n      );\n    }\n\n    return null;\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype Props = {};\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nexport class App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: false,\n    clockName: Math.floor(Math.random() * 100),\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          <Clock isClockVisible={isClockVisible} name={this.state.clockName} />\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: true });\n          }}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ isClockVisible: false });\n          }}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 100) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}